start: in "In: " => r_in
       loadI 0 => r_i
       loadI @alength => r_len
for:   cmp_LT r_i, r_len => r_cmp
       cbr r_cmp -> body, end
body:  i2i r_i => r_a
       multI r_a, 4 => r_a
       addI r_a, @a => r_a
       loadAO r_arp, r_a => r_ai
if:    cmp_EQ r_in, r_ai => r_cmp2
       cbr r_cmp2 -> then, endif
then:  jumpI -> end
endif: addI r_i, 1 => r_i
       jumpI -> for
end:   out "Index: ", r_i
